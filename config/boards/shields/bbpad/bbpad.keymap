/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT  0
#define FN       1

#define TIMEOUT 300

&encoder_1 {
    status = "okay";
};

/ {

    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };

    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default layer";
            bindings = <
                                                               &kp C_MUTE
                &mo FN       &kp KP_DIVIDE   &kp KP_MULTIPLY   &kp KP_MINUS
                &kp KP_N7    &kp KP_N8       &kp KP_N9         &trans
                &kp KP_N4    &kp KP_N5       &kp KP_N6         &kp KP_PLUS
                &kp KP_N1    &kp KP_N2       &kp KP_N3         &trans
                &kp KP_N0    &trans          &kp KP_DOT        &kp KP_ENTER
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        }; 

        fn_layer {
            label = "fn layer";
            bindings = <
                                                                     &kp KP_NUM
                &trans           &trans             &trans           &kp BSPC
                &rgb_ug RGB_HUI  &rgb_ug RGB_BRI    &rgb_ug RGB_HUD  &trans
                &rgb_ug RGB_EFR  &ext_power EP_TOG  &rgb_ug RGB_EFF  &trans
                &trans           &rgb_ug RGB_BRD    &bt BT_NXT       &trans
                &sys_reset       &trans             &bootloader      &bt BT_CLR
            >;  
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

    };
};
